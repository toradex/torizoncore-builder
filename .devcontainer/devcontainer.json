// For format details, see https://aka.ms/vscode-remote/devcontainer.json or this file's README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.106.0/containers/docker-existing-dockerfile
{
	"name": "Existing Dockerfile",

	// Dockerfile/bulid target for development container
	"build": {
		"dockerfile": "../torizoncore-builder.Dockerfile",
		"target": "tcbuilder-dev",
		"args": {
			"BUILDKIT_INLINE_CACHE": "0"
		},
		"context": ".."
	},

	"customizations": {
		"vscode": {
			// Set *default* container specific settings.json values on container create.
			"settings": {
				"terminal.integrated.defaultProfile.linux": "bash",
				"python.defaultInterpreterPath": "/usr/bin/python3"
			},

			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"ms-azuretools.vscode-docker",
				"redhat.vscode-yaml",
				"ms-python.python",
				"ms-python.pylint",
				"eamodio.gitlens",
				"github.copilot",
				"jetmartin.bats"
			]
		}
	},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	"runArgs": [ "--net=host" ],

	"containerEnv": {
		"HOST_WORKDIR": "${localWorkspaceFolder}/workdir"
	},

	// We need this for the bundle command. See https://aka.ms/vscode-remote/samples/docker-in-docker.
	"mounts":
	[
		"source=${localWorkspaceFolder}/workdir,target=/workdir,type=bind",
		"source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind",
		"source=storage-vscode,target=/storage,type=volume",
		"target=/deploy,type=volume"
	],

	// Uncomment to connect as a non-root user. See https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode"
}
